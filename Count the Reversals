Given a string s consisting of only opening and closing curly brackets '{' and '}', find out the minimum number of reversals required to convert the string into a balanced expression. A reversal means changing '{' to '}' or vice-versa.

Examples:

Input: s = "}{{}}{{{"
Output: 3
Explanation: One way to balance is:
"{{{}}{}}". There is no balanced sequence
that can be formed in lesser reversals.

Input: s = "{{}{{{}{{}}{{"
Output: -1
Explanation: There's no way we can balance
this sequence of braces.





Code
class Solution {
    public int countMinReversals(String s) {
        // code here
        int n= s.length();
        if(n%2!=0){
            return -1;
        }
        Stack<Character> stack= new Stack<Character>();
        for(int i=0; i<n; i++){
            char ch= s.charAt(i);
            if(ch=='{'){
                stack.push(ch);
            }else{
                if(stack.isEmpty() || stack.peek()=='}'){
                    stack.push(ch);
                }else{
                    stack.pop();
                }
            }
        }
        int ans=0;
        int open=0;
        int close=0;
        while(!stack.isEmpty()){
            char top=stack.pop();
            if(top=='{'){
                open++;
            }else{
                close++;
            }
        }
        ans=(int)(Math.ceil(open/2.0)+ Math.ceil(close/2.0));
        return ans;
    }
}
